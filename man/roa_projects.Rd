% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roa_projects.R
\name{roa_projects}
\alias{roa_projects}
\title{Get EC projects}
\usage{
roa_projects(grant_id = NULL, publication_id = NULL, title = NULL,
  acronym = NULL, call_id = NULL, start_year = NULL, end_year = NULL,
  country = NULL, org = NULL, model = "openaire",
  fp7_scientific_area = NULL, has_ec_funding = NULL,
  has_wt_funding = NULL, funder = NULL, funding_stream = NULL,
  keywords = NULL, sort_by = NULL, sort_order = NULL, size = 1000,
  page = 1, format = "xml", ...)
}
\arguments{
\item{grant_id}{(character) Gets the project with the given grant
identifier, if any}

\item{publication_id}{(character) publication ID}

\item{title}{(character) Name of the project}

\item{acronym}{(character) Gets the project with the given acronym, if any.}

\item{call_id}{(character) Search for projects by call identifier}

\item{start_year}{(numeric) Gets the projects that started in the given
year. Format: YYYY}

\item{end_year}{(numeric) Gets the projects that ended in the given year.
Format: YYYY}

\item{country}{(character) Search for projects by participant countries.
Format: 2-letter country code}

\item{org}{(character) Search for projects by participant institutions
(acronym)}

\item{model}{(character) The data model of the response. Model "sygma" 
is a simplified version of the "openaire" model. For sygma, only the 
xml format is available. See the relative XML schema 
(<https://www.openaire.eu/schema/sygma/oaf_sygma_v2.1.xsd>). 
Default: "openaire".}

\item{fp7_scientific_area}{(character) Search for FP7 entities by 
scientific area}

\item{has_ec_funding}{(logical) If `TRUE` gets the entities funded by the 
EC. If `FALSE` gets the entities related to projects not funded by the EC.}

\item{has_wt_funding}{(logical) If `TRUE` gets the entities funded by 
Wellcome Trust. The results are the same as those obtained with 
`funder="wt"`. If `FALSE` gets the entities related to projects not 
funded by Wellcome Trust.}

\item{funder}{(character) Search for entities by funder. One of WT, EC, 
ARC, ANDS, NSF, FCT, NHMRC}

\item{funding_stream}{(character) xx}

\item{keywords}{(character) vector of keywords}

\item{sort_by}{(character) sort field, one of projectstartdate,
projectstartyear, projectenddate, projectendyear, projectduration}

\item{sort_order}{(character) sort order. one of ascending or descending. 
optional}

\item{size}{(integer) number of records}

\item{page}{(integer) page number of the search results}

\item{format}{(character) format to return, one of json, xml, csv 
or tsv (default)}

\item{...}{curl options passed on to [crul::HttpClient]}
}
\description{
Get EC projects
}
\examples{
\dontrun{
roa_projects(org = "UGOE", size = 3)
roa_projects(call_id = "FP7-PEOPLE-2010-IRSES")
roa_projects(title = "open", size = 3)

# curl options
x <- roa_projects(org = "UGOE", size = 10, verbose = TRUE)
}
}
\references{
OpenAIRE API docs \url{http://api.openaire.eu/}
}
