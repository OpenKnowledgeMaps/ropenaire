% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roa_datasets.R
\name{roa_datasets}
\alias{roa_datasets}
\title{Search datasets}
\usage{
roa_datasets(fp7 = NULL, dataset_id = NULL, doi = NULL,
  provider_id = NULL, project_id = NULL, openaire_project_id = NULL,
  has_project = NULL, oa = NULL, title = NULL, author = NULL,
  from_date = NULL, to_date = NULL, model = NULL,
  fp7_scientific_area = NULL, has_ec_funding = NULL,
  has_wt_funding = NULL, funder = NULL, funding_stream = NULL,
  keywords = NULL, sort_by = NULL, sort_order = NULL, size = 1000,
  page = NULL, format = "tsv", ...)
}
\arguments{
\item{fp7}{(character/numeric) Search for dataset associated to a FP7
project with the given grant number}

\item{dataset_id}{Gets the dataset with the given openaire identifier,
if any}

\item{doi}{(character) Gets the publications with the given DOIs, if any}

\item{provider_id}{(character) Search for datasets by openaire data provider
identifier. Alternatevely, it is possible to repeat the parameter for each
provider id. In both cases, provider identifiers will form a query with OR
semantics.}

\item{project_id}{(character) The given grant identifier of the project.}

\item{openaire_project_id}{(character) Search for publications by openaire project
identifier. Alternatevely, it is possible to repeat the parameter for each
provider id. In both cases, provider identifiers will form a query with OR
semantics.}

\item{has_project}{(logical) If hasProject is true gets the datasets that
have a link to a project. If hasProject is false gets the datasets with no
links to projects.}

\item{oa}{(logical) Open access or not.}

\item{title}{(character) Publication title}

\item{author}{(character) Search for dataset by authors}

\item{from_date}{(character) Gets the dataset whose date of acceptance is
greater than or equal the given date. Allowed values: date formatted as
YYYY-MM-DD.}

\item{to_date}{(character) Gets the dataset whose date of acceptance is
less than or equal the given date. Allowed values: date formatted as
YYYY-MM-DD.}

\item{model}{(character) The data model of the response. Options: 
"openaire" or "sygma". Model "sygma" is a simplified version of the 
"openaire" model. For sygma, only the xml format is available. See 
the relative XML schema 
(<https://www.openaire.eu/schema/sygma/oaf_sygma_v2.1.xsd>). 
Default: "openaire". Unfortunately, passing "model=openaire" leads to
no results AFAICT, so this parameter is left as `NULL` for now.
If you pass `model=sygma` we force `format=xml` (see above)}

\item{fp7_scientific_area}{(character) Search for FP7 entities by 
scientific area}

\item{has_ec_funding}{(logical) If `TRUE` gets the entities funded by the 
EC. If `FALSE` gets the entities related to projects not funded by the EC.}

\item{has_wt_funding}{(logical) If `TRUE` gets the entities funded by 
Wellcome Trust. The results are the same as those obtained with 
`funder="wt"`. If `FALSE` gets the entities related to projects not 
funded by Wellcome Trust.}

\item{funder}{(character) Search for entities by funder. One of WT, EC, 
ARC, ANDS, NSF, FCT, NHMRC}

\item{funding_stream}{(character) xx}

\item{keywords}{(character) vector of keywords}

\item{sort_by}{(character) sort field, one of dateofcollection,
resultstoragedate, resultembargoenddate, resultembargoendyear,
resultdateofacceptance, resultacceptanceyear}

\item{sort_order}{(character) sort order. one of ascending or descending. 
optional}

\item{size}{(integer) number of records}

\item{page}{(integer) page number of the search results}

\item{format}{(character) format to return, one of json, xml, csv 
or tsv (default)}

\item{...}{curl options passed on to [crul::HttpClient]}
}
\description{
OpenAIRE is collecting the metadata of research datasets
that are related to an open access publication in OpenAIRE or linked
to a funding stream
}
\examples{
\dontrun{
# Search for FP7 grant-supported datasets
roa_datasets(fp7 = "247153", size = 10)

# different formats
roa_datasets(title = "methane", size = 3, format = "json")
roa_datasets(title = "methane", size = 3, format = "tsv")
roa_datasets(title = "methane", size = 3, format = "csv")
roa_datasets(title = "methane", size = 3, format = "xml")

# sorting
roa_datasets(sort_by = "dateofcollection", sort_order = "descending", 
  size = 3)
# vs
roa_datasets(sort_by = "dateofcollection", sort_order = "ascending", 
  size = 3)

# curl options
res <- roa_datasets(fp7 = "247153", size = 3, verbose = TRUE)
}
}
\references{
OpenAIRE API docs \url{http://api.openaire.eu/}
}
